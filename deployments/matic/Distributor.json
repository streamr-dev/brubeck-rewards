{
  "address": "0xd24aEFDDF905Cf927cB643FeBf6eC06ECc9D7802",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "agent",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAgent",
          "type": "address"
        }
      ],
      "name": "setAgent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newStipendWei",
          "type": "uint256"
        }
      ],
      "name": "setStipend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stipend",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x19512387bad0016607855af546b8562c68f09559d11c382696459b8199c6436f",
  "receipt": {
    "to": null,
    "from": "0x8A89DF41625601c5a314c001d2571976225E4038",
    "contractAddress": "0xd24aEFDDF905Cf927cB643FeBf6eC06ECc9D7802",
    "transactionIndex": 73,
    "gasUsed": "1090688",
    "logsBloom": "0x
    "blockHash": "0x3cc29695e20d1777a9ad8066203b4826971e95781e0c05579d8a10e7ef377e9f",
    "transactionHash": "0x19512387bad0016607855af546b8562c68f09559d11c382696459b8199c6436f",
    "logs": [
      {
        "transactionIndex": 73,
        "blockNumber": 44627614,
        "transactionHash": "0x19512387bad0016607855af546b8562c68f09559d11c382696459b8199c6436f",
        "address": "0xd24aEFDDF905Cf927cB643FeBf6eC06ECc9D7802",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008a89df41625601c5a314c001d2571976225e4038"
        ],
        "data": "0x",
        "logIndex": 293,
        "blockHash": "0x3cc29695e20d1777a9ad8066203b4826971e95781e0c05579d8a10e7ef377e9f"
      },
      {
        "transactionIndex": 73,
        "blockNumber": 44627614,
        "transactionHash": "0x19512387bad0016607855af546b8562c68f09559d11c382696459b8199c6436f",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000008a89df41625601c5a314c001d2571976225e4038",
          "0x000000000000000000000000f0245f6251bef9447a08766b9da2b07b28ad80b0"
        ],
        "data": "0x000000000000000000000000000000000000000000000000007971bb7e8323800000000000000000000000000000000000000000000000066561b25ec3d81240000000000000000000000000000000000000000000000a1f5db35b17313464ae00000000000000000000000000000000000000000000000664e840a34554eec0000000000000000000000000000000000000000000000a1f5e2cccd2afb7882e",
        "logIndex": 294,
        "blockHash": "0x3cc29695e20d1777a9ad8066203b4826971e95781e0c05579d8a10e7ef377e9f"
      }
    ],
    "blockNumber": 44627614,
    "cumulativeGasUsed": "12679248",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x3a9A81d576d83FF21f26f325066054540720fC34"
  ],
  "solcInputHash": "3504d854dd03d84b2643a85c94264dd0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"agent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAgent\",\"type\":\"address\"}],\"name\":\"setAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newStipendWei\",\"type\":\"uint256\"}],\"name\":\"setStipend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stipend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Distributor.sol\":\"Distributor\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/Distributor.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Distributor is Ownable {\\n    IERC20 public token;\\n\\n    address public agent;\\n\\n    uint public stipend = 0.01 ether; // estimate from https://polygonscan.com/tokentxns\\n\\n    constructor(address _token) Ownable() {\\n        token = IERC20(_token);\\n        agent = owner();\\n    }\\n    receive() external payable {}\\n\\n    function send(address[] calldata recipients, uint[] calldata amounts) external {\\n        require(_msgSender() == agent, \\\"error_onlyAgent\\\");\\n        require(recipients.length == amounts.length);\\n        for (uint i = 0; i < recipients.length; i++) {\\n            address recipient = recipients[i];\\n            uint amount = amounts[i];\\n            require(token.transfer(recipient, amount), \\\"error_transfer\\\");\\n            payable(recipient).send(stipend);\\n        }\\n    }\\n\\n    function setAgent(address newAgent) onlyOwner external {\\n        agent = newAgent;\\n    }\\n\\n    function withdrawAll() onlyOwner external {\\n        token.transfer(owner(), token.balanceOf(address(this)));\\n        payable(owner()).transfer(address(this).balance);\\n    }\\n\\n    function setStipend(uint newStipendWei) onlyOwner external {\\n        stipend = newStipendWei;\\n    }\\n}\\n\",\"keccak256\":\"0xb4f78f152f8a1a0ba39662f0635b8c58fd5d3d1ff26b6e7052f22bc708ebf23d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052662386f26fc100006003553480156200001c57600080fd5b50604051620013a1380380620013a1833981810160405281019062000042919062000206565b6200006262000056620000fa60201b60201c565b6200010260201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000b3620001c660201b60201c565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200028b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081519050620002008162000271565b92915050565b6000602082840312156200021f576200021e6200026c565b5b60006200022f84828501620001ef565b91505092915050565b600062000245826200024c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200027c8162000238565b81146200028857600080fd5b50565b611106806200029b6000396000f3fe6080604052600436106100955760003560e01c8063bcf685ed11610059578063bcf685ed1461014e578063e77a4f0314610177578063f2fde38b146101a0578063f5ff5c76146101c9578063fc0c546a146101f45761009c565b80634256163d146100a1578063715018a6146100cc578063853828b6146100e35780638da5cb5b146100fa578063a645ff5f146101255761009c565b3661009c57005b600080fd5b3480156100ad57600080fd5b506100b661021f565b6040516100c39190610e69565b60405180910390f35b3480156100d857600080fd5b506100e1610225565b005b3480156100ef57600080fd5b506100f86102ad565b005b34801561010657600080fd5b5061010f6104da565b60405161011c9190610d8a565b60405180910390f35b34801561013157600080fd5b5061014c60048036038101906101479190610bc9565b610503565b005b34801561015a57600080fd5b5061017560048036038101906101709190610b9c565b610746565b005b34801561018357600080fd5b5061019e60048036038101906101999190610c77565b610806565b005b3480156101ac57600080fd5b506101c760048036038101906101c29190610b9c565b61088c565b005b3480156101d557600080fd5b506101de610984565b6040516101eb9190610d8a565b60405180910390f35b34801561020057600080fd5b506102096109aa565b6040516102169190610dce565b60405180910390f35b60035481565b61022d6109d0565b73ffffffffffffffffffffffffffffffffffffffff1661024b6104da565b73ffffffffffffffffffffffffffffffffffffffff16146102a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029890610e29565b60405180910390fd5b6102ab60006109d8565b565b6102b56109d0565b73ffffffffffffffffffffffffffffffffffffffff166102d36104da565b73ffffffffffffffffffffffffffffffffffffffff1614610329576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032090610e29565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61036f6104da565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103ca9190610d8a565b60206040518083038186803b1580156103e257600080fd5b505afa1580156103f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041a9190610ca4565b6040518363ffffffff1660e01b8152600401610437929190610da5565b602060405180830381600087803b15801561045157600080fd5b505af1158015610465573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104899190610c4a565b506104926104da565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104d7573d6000803e3d6000fd5b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166105446109d0565b73ffffffffffffffffffffffffffffffffffffffff161461059a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059190610de9565b60405180910390fd5b8181905084849050146105ac57600080fd5b60005b8484905081101561073f5760008585838181106105cf576105ce610f79565b5b90506020020160208101906105e49190610b9c565b905060008484848181106105fb576105fa610f79565b5b905060200201359050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610661929190610da5565b602060405180830381600087803b15801561067b57600080fd5b505af115801561068f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b39190610c4a565b6106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e990610e49565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f19350505050505050808061073790610f01565b9150506105af565b5050505050565b61074e6109d0565b73ffffffffffffffffffffffffffffffffffffffff1661076c6104da565b73ffffffffffffffffffffffffffffffffffffffff16146107c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b990610e29565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61080e6109d0565b73ffffffffffffffffffffffffffffffffffffffff1661082c6104da565b73ffffffffffffffffffffffffffffffffffffffff1614610882576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087990610e29565b60405180910390fd5b8060038190555050565b6108946109d0565b73ffffffffffffffffffffffffffffffffffffffff166108b26104da565b73ffffffffffffffffffffffffffffffffffffffff1614610908576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ff90610e29565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610978576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096f90610e09565b60405180910390fd5b610981816109d8565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610aab8161108b565b92915050565b60008083601f840112610ac757610ac6610fad565b5b8235905067ffffffffffffffff811115610ae457610ae3610fa8565b5b602083019150836020820283011115610b0057610aff610fb2565b5b9250929050565b60008083601f840112610b1d57610b1c610fad565b5b8235905067ffffffffffffffff811115610b3a57610b39610fa8565b5b602083019150836020820283011115610b5657610b55610fb2565b5b9250929050565b600081519050610b6c816110a2565b92915050565b600081359050610b81816110b9565b92915050565b600081519050610b96816110b9565b92915050565b600060208284031215610bb257610bb1610fbc565b5b6000610bc084828501610a9c565b91505092915050565b60008060008060408587031215610be357610be2610fbc565b5b600085013567ffffffffffffffff811115610c0157610c00610fb7565b5b610c0d87828801610ab1565b9450945050602085013567ffffffffffffffff811115610c3057610c2f610fb7565b5b610c3c87828801610b07565b925092505092959194509250565b600060208284031215610c6057610c5f610fbc565b5b6000610c6e84828501610b5d565b91505092915050565b600060208284031215610c8d57610c8c610fbc565b5b6000610c9b84828501610b72565b91505092915050565b600060208284031215610cba57610cb9610fbc565b5b6000610cc884828501610b87565b91505092915050565b610cda81610e95565b82525050565b610ce981610edd565b82525050565b6000610cfc600f83610e84565b9150610d0782610fc1565b602082019050919050565b6000610d1f602683610e84565b9150610d2a82610fea565b604082019050919050565b6000610d42602083610e84565b9150610d4d82611039565b602082019050919050565b6000610d65600e83610e84565b9150610d7082611062565b602082019050919050565b610d8481610ed3565b82525050565b6000602082019050610d9f6000830184610cd1565b92915050565b6000604082019050610dba6000830185610cd1565b610dc76020830184610d7b565b9392505050565b6000602082019050610de36000830184610ce0565b92915050565b60006020820190508181036000830152610e0281610cef565b9050919050565b60006020820190508181036000830152610e2281610d12565b9050919050565b60006020820190508181036000830152610e4281610d35565b9050919050565b60006020820190508181036000830152610e6281610d58565b9050919050565b6000602082019050610e7e6000830184610d7b565b92915050565b600082825260208201905092915050565b6000610ea082610eb3565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610ee882610eef565b9050919050565b6000610efa82610eb3565b9050919050565b6000610f0c82610ed3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f3f57610f3e610f4a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b7f6572726f725f6f6e6c794167656e740000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f6572726f725f7472616e73666572000000000000000000000000000000000000600082015250565b61109481610e95565b811461109f57600080fd5b50565b6110ab81610ea7565b81146110b657600080fd5b50565b6110c281610ed3565b81146110cd57600080fd5b5056fea2646970667358221220d98f0ea679788bee02591d6415b46af023fa3abd43b72689bd736fb1346b8c5564736f6c63430008060033",
  "deployedBytecode": "0x6080604052600436106100955760003560e01c8063bcf685ed11610059578063bcf685ed1461014e578063e77a4f0314610177578063f2fde38b146101a0578063f5ff5c76146101c9578063fc0c546a146101f45761009c565b80634256163d146100a1578063715018a6146100cc578063853828b6146100e35780638da5cb5b146100fa578063a645ff5f146101255761009c565b3661009c57005b600080fd5b3480156100ad57600080fd5b506100b661021f565b6040516100c39190610e69565b60405180910390f35b3480156100d857600080fd5b506100e1610225565b005b3480156100ef57600080fd5b506100f86102ad565b005b34801561010657600080fd5b5061010f6104da565b60405161011c9190610d8a565b60405180910390f35b34801561013157600080fd5b5061014c60048036038101906101479190610bc9565b610503565b005b34801561015a57600080fd5b5061017560048036038101906101709190610b9c565b610746565b005b34801561018357600080fd5b5061019e60048036038101906101999190610c77565b610806565b005b3480156101ac57600080fd5b506101c760048036038101906101c29190610b9c565b61088c565b005b3480156101d557600080fd5b506101de610984565b6040516101eb9190610d8a565b60405180910390f35b34801561020057600080fd5b506102096109aa565b6040516102169190610dce565b60405180910390f35b60035481565b61022d6109d0565b73ffffffffffffffffffffffffffffffffffffffff1661024b6104da565b73ffffffffffffffffffffffffffffffffffffffff16146102a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029890610e29565b60405180910390fd5b6102ab60006109d8565b565b6102b56109d0565b73ffffffffffffffffffffffffffffffffffffffff166102d36104da565b73ffffffffffffffffffffffffffffffffffffffff1614610329576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032090610e29565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61036f6104da565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103ca9190610d8a565b60206040518083038186803b1580156103e257600080fd5b505afa1580156103f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041a9190610ca4565b6040518363ffffffff1660e01b8152600401610437929190610da5565b602060405180830381600087803b15801561045157600080fd5b505af1158015610465573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104899190610c4a565b506104926104da565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104d7573d6000803e3d6000fd5b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166105446109d0565b73ffffffffffffffffffffffffffffffffffffffff161461059a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059190610de9565b60405180910390fd5b8181905084849050146105ac57600080fd5b60005b8484905081101561073f5760008585838181106105cf576105ce610f79565b5b90506020020160208101906105e49190610b9c565b905060008484848181106105fb576105fa610f79565b5b905060200201359050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610661929190610da5565b602060405180830381600087803b15801561067b57600080fd5b505af115801561068f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b39190610c4a565b6106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e990610e49565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f19350505050505050808061073790610f01565b9150506105af565b5050505050565b61074e6109d0565b73ffffffffffffffffffffffffffffffffffffffff1661076c6104da565b73ffffffffffffffffffffffffffffffffffffffff16146107c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b990610e29565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61080e6109d0565b73ffffffffffffffffffffffffffffffffffffffff1661082c6104da565b73ffffffffffffffffffffffffffffffffffffffff1614610882576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087990610e29565b60405180910390fd5b8060038190555050565b6108946109d0565b73ffffffffffffffffffffffffffffffffffffffff166108b26104da565b73ffffffffffffffffffffffffffffffffffffffff1614610908576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ff90610e29565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610978576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096f90610e09565b60405180910390fd5b610981816109d8565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610aab8161108b565b92915050565b60008083601f840112610ac757610ac6610fad565b5b8235905067ffffffffffffffff811115610ae457610ae3610fa8565b5b602083019150836020820283011115610b0057610aff610fb2565b5b9250929050565b60008083601f840112610b1d57610b1c610fad565b5b8235905067ffffffffffffffff811115610b3a57610b39610fa8565b5b602083019150836020820283011115610b5657610b55610fb2565b5b9250929050565b600081519050610b6c816110a2565b92915050565b600081359050610b81816110b9565b92915050565b600081519050610b96816110b9565b92915050565b600060208284031215610bb257610bb1610fbc565b5b6000610bc084828501610a9c565b91505092915050565b60008060008060408587031215610be357610be2610fbc565b5b600085013567ffffffffffffffff811115610c0157610c00610fb7565b5b610c0d87828801610ab1565b9450945050602085013567ffffffffffffffff811115610c3057610c2f610fb7565b5b610c3c87828801610b07565b925092505092959194509250565b600060208284031215610c6057610c5f610fbc565b5b6000610c6e84828501610b5d565b91505092915050565b600060208284031215610c8d57610c8c610fbc565b5b6000610c9b84828501610b72565b91505092915050565b600060208284031215610cba57610cb9610fbc565b5b6000610cc884828501610b87565b91505092915050565b610cda81610e95565b82525050565b610ce981610edd565b82525050565b6000610cfc600f83610e84565b9150610d0782610fc1565b602082019050919050565b6000610d1f602683610e84565b9150610d2a82610fea565b604082019050919050565b6000610d42602083610e84565b9150610d4d82611039565b602082019050919050565b6000610d65600e83610e84565b9150610d7082611062565b602082019050919050565b610d8481610ed3565b82525050565b6000602082019050610d9f6000830184610cd1565b92915050565b6000604082019050610dba6000830185610cd1565b610dc76020830184610d7b565b9392505050565b6000602082019050610de36000830184610ce0565b92915050565b60006020820190508181036000830152610e0281610cef565b9050919050565b60006020820190508181036000830152610e2281610d12565b9050919050565b60006020820190508181036000830152610e4281610d35565b9050919050565b60006020820190508181036000830152610e6281610d58565b9050919050565b6000602082019050610e7e6000830184610d7b565b92915050565b600082825260208201905092915050565b6000610ea082610eb3565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610ee882610eef565b9050919050565b6000610efa82610eb3565b9050919050565b6000610f0c82610ed3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f3f57610f3e610f4a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b7f6572726f725f6f6e6c794167656e740000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f6572726f725f7472616e73666572000000000000000000000000000000000000600082015250565b61109481610e95565b811461109f57600080fd5b50565b6110ab81610ea7565b81146110b657600080fd5b50565b6110c281610ed3565b81146110cd57600080fd5b5056fea2646970667358221220d98f0ea679788bee02591d6415b46af023fa3abd43b72689bd736fb1346b8c5564736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Distributor.sol:Distributor",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 212,
        "contract": "contracts/Distributor.sol:Distributor",
        "label": "token",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)181"
      },
      {
        "astId": 214,
        "contract": "contracts/Distributor.sol:Distributor",
        "label": "agent",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 217,
        "contract": "contracts/Distributor.sol:Distributor",
        "label": "stipend",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)181": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}