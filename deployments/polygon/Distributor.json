{
  "address": "0xb7c47d6feb01e9cc3d1c2fd387688ac599fe50e4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "StipendSendingFailed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "agent",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAgent",
          "type": "address"
        }
      ],
      "name": "setAgent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newStipendWei",
          "type": "uint256"
        }
      ],
      "name": "setStipend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stipend",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x67b8d63e328ea292ecfda31c9ebabc0218542daaa8e8e86ff9c319a14f7e49f6",
  "receipt": {
    "to": null,
    "from": "0x41e36d4ffb5b443b20f55bcff27c68ff086fe06f",
    "contractAddress": "0xb7c47d6feb01e9cc3d1c2fd387688ac599fe50e4",
    "transactionIndex": "0x3a",
    "gasUsed": "0x108a93",
    "logsBloom": "0x
    "blockHash": "0xe43b74b9b98376daa21692a423d8c5fab0e2e7780d101ce4ff0a349706eb0ca0",
    "transactionHash": "0x6c59151142a00c3769edc42f5219a8955b46221672a14bf716de70fd3f6c7517",
    "logs": [
      {
        "address": "0xb7c47d6feb01e9cc3d1c2fd387688ac599fe50e4",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000041e36d4ffb5b443b20f55bcff27c68ff086fe06f"
        ],
        "data": "0x",
        "blockNumber": "0x33e3b81",
        "transactionHash": "0x6c59151142a00c3769edc42f5219a8955b46221672a14bf716de70fd3f6c7517",
        "transactionIndex": "0x3a",
        "blockHash": "0xe43b74b9b98376daa21692a423d8c5fab0e2e7780d101ce4ff0a349706eb0ca0",
        "logIndex": "0x63",
        "removed": false
      },
      {
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x00000000000000000000000041e36d4ffb5b443b20f55bcff27c68ff086fe06f",
          "0x0000000000000000000000007c7379531b2aee82e4ca06d4175d13b9cbeafd49"
        ],
        "data": "0x000000000000000000000000000000000000000000000000017c2b9e9238eb5c0000000000000000000000000000000000000000000000047692b4be5acd358400000000000000000000000000000000000000000002d12d955f43a7341a29b90000000000000000000000000000000000000000000000047516891fc8944a2800000000000000000000000000000000000000000002d12d96db6f45c6531515",
        "blockNumber": "0x33e3b81",
        "transactionHash": "0x6c59151142a00c3769edc42f5219a8955b46221672a14bf716de70fd3f6c7517",
        "transactionIndex": "0x3a",
        "blockHash": "0xe43b74b9b98376daa21692a423d8c5fab0e2e7780d101ce4ff0a349706eb0ca0",
        "logIndex": "0x64",
        "removed": false
      }
    ],
    "blockNumber": "0x33e3b81",
    "cumulativeGasUsed": "0x60f634",
    "status": "0x1"
  },
  "args": [
    "0x3a9A81d576d83FF21f26f325066054540720fC34"
  ],
  "solcInputHash": "8c3408a85980014346a8a335b031ef84",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"StipendSendingFailed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"agent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAgent\",\"type\":\"address\"}],\"name\":\"setAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newStipendWei\",\"type\":\"uint256\"}],\"name\":\"setStipend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stipend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Distributor.sol\":\"Distributor\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/Distributor.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Distributor is Ownable {\\n    IERC20 public token;\\n\\n    address public agent;\\n\\n    uint public stipend; // = 0.01 ether; // estimate from https://polygonscan.com/tokentxns\\n\\n    event StipendSendingFailed(address recipient);\\n\\n    constructor(address _token) Ownable() {\\n        token = IERC20(_token);\\n        agent = owner();\\n    }\\n    receive() external payable {}\\n\\n    function send(address[] calldata recipients, uint[] calldata amounts) external {\\n        require(_msgSender() == agent, \\\"error_onlyAgent\\\");\\n        require(recipients.length == amounts.length);\\n        for (uint i = 0; i < recipients.length; i++) {\\n            address recipient = recipients[i];\\n            uint amount = amounts[i];\\n            require(token.transfer(recipient, amount), \\\"error_transfer\\\");\\n\\n            // use send instead of transfer to ignore if send fails\\n            // we don't want the receiving contract to stop the distribution here\\n            // if they don't want the stipend, then they revert, that's fine.\\n            if (stipend > 0) {\\n                if (!payable(recipient).send(stipend)) {\\n                    emit StipendSendingFailed(recipient);\\n                }\\n            }\\n        }\\n    }\\n\\n    function setAgent(address newAgent) onlyOwner external {\\n        agent = newAgent;\\n    }\\n\\n    function withdrawAll() onlyOwner external {\\n        token.transfer(owner(), token.balanceOf(address(this)));\\n        payable(owner()).transfer(address(this).balance);\\n    }\\n\\n    function setStipend(uint newStipendWei) onlyOwner external {\\n        stipend = newStipendWei;\\n    }\\n}\\n\",\"keccak256\":\"0xa1bed6e34070d75dbd1bf943ad4838030b05b632a5cb603af61c2dd616e6155a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620013dd380380620013dd8339818101604052810190620000379190620001fb565b620000576200004b620000ef60201b60201c565b620000f760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000a8620001bb60201b60201c565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000280565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081519050620001f58162000266565b92915050565b60006020828403121562000214576200021362000261565b5b60006200022484828501620001e4565b91505092915050565b60006200023a8262000241565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b62000271816200022d565b81146200027d57600080fd5b50565b61114d80620002906000396000f3fe6080604052600436106100955760003560e01c8063bcf685ed11610059578063bcf685ed1461014e578063e77a4f0314610177578063f2fde38b146101a0578063f5ff5c76146101c9578063fc0c546a146101f45761009c565b80634256163d146100a1578063715018a6146100cc578063853828b6146100e35780638da5cb5b146100fa578063a645ff5f146101255761009c565b3661009c57005b600080fd5b3480156100ad57600080fd5b506100b661021f565b6040516100c39190610eb0565b60405180910390f35b3480156100d857600080fd5b506100e1610225565b005b3480156100ef57600080fd5b506100f86102ad565b005b34801561010657600080fd5b5061010f6104da565b60405161011c9190610dd1565b60405180910390f35b34801561013157600080fd5b5061014c60048036038101906101479190610c10565b610503565b005b34801561015a57600080fd5b5061017560048036038101906101709190610be3565b61078d565b005b34801561018357600080fd5b5061019e60048036038101906101999190610cbe565b61084d565b005b3480156101ac57600080fd5b506101c760048036038101906101c29190610be3565b6108d3565b005b3480156101d557600080fd5b506101de6109cb565b6040516101eb9190610dd1565b60405180910390f35b34801561020057600080fd5b506102096109f1565b6040516102169190610e15565b60405180910390f35b60035481565b61022d610a17565b73ffffffffffffffffffffffffffffffffffffffff1661024b6104da565b73ffffffffffffffffffffffffffffffffffffffff16146102a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029890610e70565b60405180910390fd5b6102ab6000610a1f565b565b6102b5610a17565b73ffffffffffffffffffffffffffffffffffffffff166102d36104da565b73ffffffffffffffffffffffffffffffffffffffff1614610329576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032090610e70565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61036f6104da565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103ca9190610dd1565b60206040518083038186803b1580156103e257600080fd5b505afa1580156103f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041a9190610ceb565b6040518363ffffffff1660e01b8152600401610437929190610dec565b602060405180830381600087803b15801561045157600080fd5b505af1158015610465573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104899190610c91565b506104926104da565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104d7573d6000803e3d6000fd5b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610544610a17565b73ffffffffffffffffffffffffffffffffffffffff161461059a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059190610e30565b60405180910390fd5b8181905084849050146105ac57600080fd5b60005b848490508110156107865760008585838181106105cf576105ce610fc0565b5b90506020020160208101906105e49190610be3565b905060008484848181106105fb576105fa610fc0565b5b905060200201359050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610661929190610dec565b602060405180830381600087803b15801561067b57600080fd5b505af115801561068f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b39190610c91565b6106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e990610e90565b60405180910390fd5b60006003541115610771578173ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f19350505050610770577fbb171f178db03185982063ae9401394db6f771e8b96911bb7d56ef9cbbd35813826040516107679190610dd1565b60405180910390a15b5b5050808061077e90610f48565b9150506105af565b5050505050565b610795610a17565b73ffffffffffffffffffffffffffffffffffffffff166107b36104da565b73ffffffffffffffffffffffffffffffffffffffff1614610809576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080090610e70565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610855610a17565b73ffffffffffffffffffffffffffffffffffffffff166108736104da565b73ffffffffffffffffffffffffffffffffffffffff16146108c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c090610e70565b60405180910390fd5b8060038190555050565b6108db610a17565b73ffffffffffffffffffffffffffffffffffffffff166108f96104da565b73ffffffffffffffffffffffffffffffffffffffff161461094f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094690610e70565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b690610e50565b60405180910390fd5b6109c881610a1f565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610af2816110d2565b92915050565b60008083601f840112610b0e57610b0d610ff4565b5b8235905067ffffffffffffffff811115610b2b57610b2a610fef565b5b602083019150836020820283011115610b4757610b46610ff9565b5b9250929050565b60008083601f840112610b6457610b63610ff4565b5b8235905067ffffffffffffffff811115610b8157610b80610fef565b5b602083019150836020820283011115610b9d57610b9c610ff9565b5b9250929050565b600081519050610bb3816110e9565b92915050565b600081359050610bc881611100565b92915050565b600081519050610bdd81611100565b92915050565b600060208284031215610bf957610bf8611003565b5b6000610c0784828501610ae3565b91505092915050565b60008060008060408587031215610c2a57610c29611003565b5b600085013567ffffffffffffffff811115610c4857610c47610ffe565b5b610c5487828801610af8565b9450945050602085013567ffffffffffffffff811115610c7757610c76610ffe565b5b610c8387828801610b4e565b925092505092959194509250565b600060208284031215610ca757610ca6611003565b5b6000610cb584828501610ba4565b91505092915050565b600060208284031215610cd457610cd3611003565b5b6000610ce284828501610bb9565b91505092915050565b600060208284031215610d0157610d00611003565b5b6000610d0f84828501610bce565b91505092915050565b610d2181610edc565b82525050565b610d3081610f24565b82525050565b6000610d43600f83610ecb565b9150610d4e82611008565b602082019050919050565b6000610d66602683610ecb565b9150610d7182611031565b604082019050919050565b6000610d89602083610ecb565b9150610d9482611080565b602082019050919050565b6000610dac600e83610ecb565b9150610db7826110a9565b602082019050919050565b610dcb81610f1a565b82525050565b6000602082019050610de66000830184610d18565b92915050565b6000604082019050610e016000830185610d18565b610e0e6020830184610dc2565b9392505050565b6000602082019050610e2a6000830184610d27565b92915050565b60006020820190508181036000830152610e4981610d36565b9050919050565b60006020820190508181036000830152610e6981610d59565b9050919050565b60006020820190508181036000830152610e8981610d7c565b9050919050565b60006020820190508181036000830152610ea981610d9f565b9050919050565b6000602082019050610ec56000830184610dc2565b92915050565b600082825260208201905092915050565b6000610ee782610efa565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610f2f82610f36565b9050919050565b6000610f4182610efa565b9050919050565b6000610f5382610f1a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f8657610f85610f91565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b7f6572726f725f6f6e6c794167656e740000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f6572726f725f7472616e73666572000000000000000000000000000000000000600082015250565b6110db81610edc565b81146110e657600080fd5b50565b6110f281610eee565b81146110fd57600080fd5b50565b61110981610f1a565b811461111457600080fd5b5056fea2646970667358221220a2a0dfc7d048cc964b008f09e55b9a0925a1921e3a3b2a5d78044375fd695b6c64736f6c63430008060033",
  "deployedBytecode": "0x6080604052600436106100955760003560e01c8063bcf685ed11610059578063bcf685ed1461014e578063e77a4f0314610177578063f2fde38b146101a0578063f5ff5c76146101c9578063fc0c546a146101f45761009c565b80634256163d146100a1578063715018a6146100cc578063853828b6146100e35780638da5cb5b146100fa578063a645ff5f146101255761009c565b3661009c57005b600080fd5b3480156100ad57600080fd5b506100b661021f565b6040516100c39190610eb0565b60405180910390f35b3480156100d857600080fd5b506100e1610225565b005b3480156100ef57600080fd5b506100f86102ad565b005b34801561010657600080fd5b5061010f6104da565b60405161011c9190610dd1565b60405180910390f35b34801561013157600080fd5b5061014c60048036038101906101479190610c10565b610503565b005b34801561015a57600080fd5b5061017560048036038101906101709190610be3565b61078d565b005b34801561018357600080fd5b5061019e60048036038101906101999190610cbe565b61084d565b005b3480156101ac57600080fd5b506101c760048036038101906101c29190610be3565b6108d3565b005b3480156101d557600080fd5b506101de6109cb565b6040516101eb9190610dd1565b60405180910390f35b34801561020057600080fd5b506102096109f1565b6040516102169190610e15565b60405180910390f35b60035481565b61022d610a17565b73ffffffffffffffffffffffffffffffffffffffff1661024b6104da565b73ffffffffffffffffffffffffffffffffffffffff16146102a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029890610e70565b60405180910390fd5b6102ab6000610a1f565b565b6102b5610a17565b73ffffffffffffffffffffffffffffffffffffffff166102d36104da565b73ffffffffffffffffffffffffffffffffffffffff1614610329576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032090610e70565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61036f6104da565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103ca9190610dd1565b60206040518083038186803b1580156103e257600080fd5b505afa1580156103f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041a9190610ceb565b6040518363ffffffff1660e01b8152600401610437929190610dec565b602060405180830381600087803b15801561045157600080fd5b505af1158015610465573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104899190610c91565b506104926104da565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104d7573d6000803e3d6000fd5b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610544610a17565b73ffffffffffffffffffffffffffffffffffffffff161461059a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059190610e30565b60405180910390fd5b8181905084849050146105ac57600080fd5b60005b848490508110156107865760008585838181106105cf576105ce610fc0565b5b90506020020160208101906105e49190610be3565b905060008484848181106105fb576105fa610fc0565b5b905060200201359050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610661929190610dec565b602060405180830381600087803b15801561067b57600080fd5b505af115801561068f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b39190610c91565b6106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e990610e90565b60405180910390fd5b60006003541115610771578173ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f19350505050610770577fbb171f178db03185982063ae9401394db6f771e8b96911bb7d56ef9cbbd35813826040516107679190610dd1565b60405180910390a15b5b5050808061077e90610f48565b9150506105af565b5050505050565b610795610a17565b73ffffffffffffffffffffffffffffffffffffffff166107b36104da565b73ffffffffffffffffffffffffffffffffffffffff1614610809576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080090610e70565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610855610a17565b73ffffffffffffffffffffffffffffffffffffffff166108736104da565b73ffffffffffffffffffffffffffffffffffffffff16146108c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c090610e70565b60405180910390fd5b8060038190555050565b6108db610a17565b73ffffffffffffffffffffffffffffffffffffffff166108f96104da565b73ffffffffffffffffffffffffffffffffffffffff161461094f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094690610e70565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b690610e50565b60405180910390fd5b6109c881610a1f565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610af2816110d2565b92915050565b60008083601f840112610b0e57610b0d610ff4565b5b8235905067ffffffffffffffff811115610b2b57610b2a610fef565b5b602083019150836020820283011115610b4757610b46610ff9565b5b9250929050565b60008083601f840112610b6457610b63610ff4565b5b8235905067ffffffffffffffff811115610b8157610b80610fef565b5b602083019150836020820283011115610b9d57610b9c610ff9565b5b9250929050565b600081519050610bb3816110e9565b92915050565b600081359050610bc881611100565b92915050565b600081519050610bdd81611100565b92915050565b600060208284031215610bf957610bf8611003565b5b6000610c0784828501610ae3565b91505092915050565b60008060008060408587031215610c2a57610c29611003565b5b600085013567ffffffffffffffff811115610c4857610c47610ffe565b5b610c5487828801610af8565b9450945050602085013567ffffffffffffffff811115610c7757610c76610ffe565b5b610c8387828801610b4e565b925092505092959194509250565b600060208284031215610ca757610ca6611003565b5b6000610cb584828501610ba4565b91505092915050565b600060208284031215610cd457610cd3611003565b5b6000610ce284828501610bb9565b91505092915050565b600060208284031215610d0157610d00611003565b5b6000610d0f84828501610bce565b91505092915050565b610d2181610edc565b82525050565b610d3081610f24565b82525050565b6000610d43600f83610ecb565b9150610d4e82611008565b602082019050919050565b6000610d66602683610ecb565b9150610d7182611031565b604082019050919050565b6000610d89602083610ecb565b9150610d9482611080565b602082019050919050565b6000610dac600e83610ecb565b9150610db7826110a9565b602082019050919050565b610dcb81610f1a565b82525050565b6000602082019050610de66000830184610d18565b92915050565b6000604082019050610e016000830185610d18565b610e0e6020830184610dc2565b9392505050565b6000602082019050610e2a6000830184610d27565b92915050565b60006020820190508181036000830152610e4981610d36565b9050919050565b60006020820190508181036000830152610e6981610d59565b9050919050565b60006020820190508181036000830152610e8981610d7c565b9050919050565b60006020820190508181036000830152610ea981610d9f565b9050919050565b6000602082019050610ec56000830184610dc2565b92915050565b600082825260208201905092915050565b6000610ee782610efa565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610f2f82610f36565b9050919050565b6000610f4182610efa565b9050919050565b6000610f5382610f1a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f8657610f85610f91565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b7f6572726f725f6f6e6c794167656e740000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f6572726f725f7472616e73666572000000000000000000000000000000000000600082015250565b6110db81610edc565b81146110e657600080fd5b50565b6110f281610eee565b81146110fd57600080fd5b50565b61110981610f1a565b811461111457600080fd5b5056fea2646970667358221220a2a0dfc7d048cc964b008f09e55b9a0925a1921e3a3b2a5d78044375fd695b6c64736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Distributor.sol:Distributor",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 212,
        "contract": "contracts/Distributor.sol:Distributor",
        "label": "token",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)181"
      },
      {
        "astId": 214,
        "contract": "contracts/Distributor.sol:Distributor",
        "label": "agent",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 216,
        "contract": "contracts/Distributor.sol:Distributor",
        "label": "stipend",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)181": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}