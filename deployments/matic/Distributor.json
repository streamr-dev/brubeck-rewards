{
  "address": "0x3979F7D6b5C5bFA4Bcd441b4f35bfA0731CcfAEf",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "agent",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAgent",
          "type": "address"
        }
      ],
      "name": "setAgent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newStipendWei",
          "type": "uint256"
        }
      ],
      "name": "setStipend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stipend",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x8e9f44c0d4212e7a36c54b3218732380391704e0a9700416f5becda0cac662fd",
  "receipt": {
    "to": null,
    "from": "0x41e36D4fFb5B443B20f55bcFf27c68fF086Fe06f",
    "contractAddress": "0x3979F7D6b5C5bFA4Bcd441b4f35bfA0731CcfAEf",
    "transactionIndex": 94,
    "gasUsed": "1094336",
    "logsBloom": "0x
    "blockHash": "0x81d1323fb7b825cd60daf6795c131532c4c03c1e569d12db6f1ccff7a39727cb",
    "transactionHash": "0x8e9f44c0d4212e7a36c54b3218732380391704e0a9700416f5becda0cac662fd",
    "logs": [
      {
        "transactionIndex": 94,
        "blockNumber": 21556819,
        "transactionHash": "0x8e9f44c0d4212e7a36c54b3218732380391704e0a9700416f5becda0cac662fd",
        "address": "0x3979F7D6b5C5bFA4Bcd441b4f35bfA0731CcfAEf",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000041e36d4ffb5b443b20f55bcff27c68ff086fe06f"
        ],
        "data": "0x",
        "logIndex": 441,
        "blockHash": "0x81d1323fb7b825cd60daf6795c131532c4c03c1e569d12db6f1ccff7a39727cb"
      },
      {
        "transactionIndex": 94,
        "blockNumber": 21556819,
        "transactionHash": "0x8e9f44c0d4212e7a36c54b3218732380391704e0a9700416f5becda0cac662fd",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x00000000000000000000000041e36d4ffb5b443b20f55bcff27c68ff086fe06f",
          "0x0000000000000000000000007b5000af8ab69fd59eb0d4f5762bff57c9c04385"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000074a2c8a859000000000000000000000000000000000000000000000000000042faba2d9936a0190000000000000000000000000000000000000000000074dfad8d79a511e545b100000000000000000000000000000000000000000000000042861764f0dda0190000000000000000000000000000000000000000000074dfae021c6dba3e45b1",
        "logIndex": 442,
        "blockHash": "0x81d1323fb7b825cd60daf6795c131532c4c03c1e569d12db6f1ccff7a39727cb"
      }
    ],
    "blockNumber": 21556819,
    "cumulativeGasUsed": "13029625",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x3a9A81d576d83FF21f26f325066054540720fC34"
  ],
  "solcInputHash": "4da73527e5128b33ff7a210fa97f14bb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"agent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAgent\",\"type\":\"address\"}],\"name\":\"setAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newStipendWei\",\"type\":\"uint256\"}],\"name\":\"setStipend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stipend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Distributor.sol\":\"Distributor\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/Distributor.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Distributor is Ownable {\\n    IERC20 public token;\\n\\n    address public agent;\\n\\n    uint public stipend = 0.01 ether; // estimate from https://polygonscan.com/tokentxns\\n\\n    constructor(address _token) Ownable() {\\n        token = IERC20(_token);\\n        agent = owner();\\n    }\\n    receive() external payable {}\\n\\n    function send(address[] calldata recipients, uint[] calldata amounts) external {\\n        require(_msgSender() == agent, \\\"error_onlyAgent\\\");\\n        require(recipients.length == amounts.length);\\n        for (uint i = 0; i < recipients.length; i++) {\\n            address recipient = recipients[i];\\n            uint amount = amounts[i];\\n            require(token.transfer(recipient, amount), \\\"error_transfer\\\");\\n            payable(recipient).transfer(stipend);\\n        }\\n    }\\n\\n    function setAgent(address newAgent) onlyOwner external {\\n        agent = newAgent;\\n    }\\n\\n    function withdrawAll() onlyOwner external {\\n        token.transfer(owner(), token.balanceOf(address(this)));\\n        payable(owner()).transfer(address(this).balance);\\n    }\\n\\n    function setStipend(uint newStipendWei) onlyOwner external {\\n        stipend = newStipendWei;\\n    }\\n}\\n\",\"keccak256\":\"0xd2f479c2e490ae5396518ea0c1a895a05ef6b339254488e03a3167fe4c8f2903\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052662386f26fc100006003553480156200001c57600080fd5b50604051620013b2380380620013b2833981810160405281019062000042919062000206565b6200006262000056620000fa60201b60201c565b6200010260201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000b3620001c660201b60201c565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200028b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081519050620002008162000271565b92915050565b6000602082840312156200021f576200021e6200026c565b5b60006200022f84828501620001ef565b91505092915050565b600062000245826200024c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200027c8162000238565b81146200028857600080fd5b50565b611117806200029b6000396000f3fe6080604052600436106100955760003560e01c8063bcf685ed11610059578063bcf685ed1461014e578063e77a4f0314610177578063f2fde38b146101a0578063f5ff5c76146101c9578063fc0c546a146101f45761009c565b80634256163d146100a1578063715018a6146100cc578063853828b6146100e35780638da5cb5b146100fa578063a645ff5f146101255761009c565b3661009c57005b600080fd5b3480156100ad57600080fd5b506100b661021f565b6040516100c39190610e7a565b60405180910390f35b3480156100d857600080fd5b506100e1610225565b005b3480156100ef57600080fd5b506100f86102ad565b005b34801561010657600080fd5b5061010f6104da565b60405161011c9190610d9b565b60405180910390f35b34801561013157600080fd5b5061014c60048036038101906101479190610bda565b610503565b005b34801561015a57600080fd5b5061017560048036038101906101709190610bad565b610757565b005b34801561018357600080fd5b5061019e60048036038101906101999190610c88565b610817565b005b3480156101ac57600080fd5b506101c760048036038101906101c29190610bad565b61089d565b005b3480156101d557600080fd5b506101de610995565b6040516101eb9190610d9b565b60405180910390f35b34801561020057600080fd5b506102096109bb565b6040516102169190610ddf565b60405180910390f35b60035481565b61022d6109e1565b73ffffffffffffffffffffffffffffffffffffffff1661024b6104da565b73ffffffffffffffffffffffffffffffffffffffff16146102a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029890610e3a565b60405180910390fd5b6102ab60006109e9565b565b6102b56109e1565b73ffffffffffffffffffffffffffffffffffffffff166102d36104da565b73ffffffffffffffffffffffffffffffffffffffff1614610329576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032090610e3a565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61036f6104da565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103ca9190610d9b565b60206040518083038186803b1580156103e257600080fd5b505afa1580156103f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041a9190610cb5565b6040518363ffffffff1660e01b8152600401610437929190610db6565b602060405180830381600087803b15801561045157600080fd5b505af1158015610465573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104899190610c5b565b506104926104da565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104d7573d6000803e3d6000fd5b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166105446109e1565b73ffffffffffffffffffffffffffffffffffffffff161461059a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059190610dfa565b60405180910390fd5b8181905084849050146105ac57600080fd5b60005b848490508110156107505760008585838181106105cf576105ce610f8a565b5b90506020020160208101906105e49190610bad565b905060008484848181106105fb576105fa610f8a565b5b905060200201359050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610661929190610db6565b602060405180830381600087803b15801561067b57600080fd5b505af115801561068f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b39190610c5b565b6106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e990610e5a565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f1935050505015801561073a573d6000803e3d6000fd5b505050808061074890610f12565b9150506105af565b5050505050565b61075f6109e1565b73ffffffffffffffffffffffffffffffffffffffff1661077d6104da565b73ffffffffffffffffffffffffffffffffffffffff16146107d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ca90610e3a565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61081f6109e1565b73ffffffffffffffffffffffffffffffffffffffff1661083d6104da565b73ffffffffffffffffffffffffffffffffffffffff1614610893576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088a90610e3a565b60405180910390fd5b8060038190555050565b6108a56109e1565b73ffffffffffffffffffffffffffffffffffffffff166108c36104da565b73ffffffffffffffffffffffffffffffffffffffff1614610919576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091090610e3a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610989576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098090610e1a565b60405180910390fd5b610992816109e9565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610abc8161109c565b92915050565b60008083601f840112610ad857610ad7610fbe565b5b8235905067ffffffffffffffff811115610af557610af4610fb9565b5b602083019150836020820283011115610b1157610b10610fc3565b5b9250929050565b60008083601f840112610b2e57610b2d610fbe565b5b8235905067ffffffffffffffff811115610b4b57610b4a610fb9565b5b602083019150836020820283011115610b6757610b66610fc3565b5b9250929050565b600081519050610b7d816110b3565b92915050565b600081359050610b92816110ca565b92915050565b600081519050610ba7816110ca565b92915050565b600060208284031215610bc357610bc2610fcd565b5b6000610bd184828501610aad565b91505092915050565b60008060008060408587031215610bf457610bf3610fcd565b5b600085013567ffffffffffffffff811115610c1257610c11610fc8565b5b610c1e87828801610ac2565b9450945050602085013567ffffffffffffffff811115610c4157610c40610fc8565b5b610c4d87828801610b18565b925092505092959194509250565b600060208284031215610c7157610c70610fcd565b5b6000610c7f84828501610b6e565b91505092915050565b600060208284031215610c9e57610c9d610fcd565b5b6000610cac84828501610b83565b91505092915050565b600060208284031215610ccb57610cca610fcd565b5b6000610cd984828501610b98565b91505092915050565b610ceb81610ea6565b82525050565b610cfa81610eee565b82525050565b6000610d0d600f83610e95565b9150610d1882610fd2565b602082019050919050565b6000610d30602683610e95565b9150610d3b82610ffb565b604082019050919050565b6000610d53602083610e95565b9150610d5e8261104a565b602082019050919050565b6000610d76600e83610e95565b9150610d8182611073565b602082019050919050565b610d9581610ee4565b82525050565b6000602082019050610db06000830184610ce2565b92915050565b6000604082019050610dcb6000830185610ce2565b610dd86020830184610d8c565b9392505050565b6000602082019050610df46000830184610cf1565b92915050565b60006020820190508181036000830152610e1381610d00565b9050919050565b60006020820190508181036000830152610e3381610d23565b9050919050565b60006020820190508181036000830152610e5381610d46565b9050919050565b60006020820190508181036000830152610e7381610d69565b9050919050565b6000602082019050610e8f6000830184610d8c565b92915050565b600082825260208201905092915050565b6000610eb182610ec4565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610ef982610f00565b9050919050565b6000610f0b82610ec4565b9050919050565b6000610f1d82610ee4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f5057610f4f610f5b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b7f6572726f725f6f6e6c794167656e740000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f6572726f725f7472616e73666572000000000000000000000000000000000000600082015250565b6110a581610ea6565b81146110b057600080fd5b50565b6110bc81610eb8565b81146110c757600080fd5b50565b6110d381610ee4565b81146110de57600080fd5b5056fea2646970667358221220e2315efae9fe33e95a55fac9bdc5caef01ab112fce5bfdd4f82c8a3cff8b0e9164736f6c63430008060033",
  "deployedBytecode": "0x6080604052600436106100955760003560e01c8063bcf685ed11610059578063bcf685ed1461014e578063e77a4f0314610177578063f2fde38b146101a0578063f5ff5c76146101c9578063fc0c546a146101f45761009c565b80634256163d146100a1578063715018a6146100cc578063853828b6146100e35780638da5cb5b146100fa578063a645ff5f146101255761009c565b3661009c57005b600080fd5b3480156100ad57600080fd5b506100b661021f565b6040516100c39190610e7a565b60405180910390f35b3480156100d857600080fd5b506100e1610225565b005b3480156100ef57600080fd5b506100f86102ad565b005b34801561010657600080fd5b5061010f6104da565b60405161011c9190610d9b565b60405180910390f35b34801561013157600080fd5b5061014c60048036038101906101479190610bda565b610503565b005b34801561015a57600080fd5b5061017560048036038101906101709190610bad565b610757565b005b34801561018357600080fd5b5061019e60048036038101906101999190610c88565b610817565b005b3480156101ac57600080fd5b506101c760048036038101906101c29190610bad565b61089d565b005b3480156101d557600080fd5b506101de610995565b6040516101eb9190610d9b565b60405180910390f35b34801561020057600080fd5b506102096109bb565b6040516102169190610ddf565b60405180910390f35b60035481565b61022d6109e1565b73ffffffffffffffffffffffffffffffffffffffff1661024b6104da565b73ffffffffffffffffffffffffffffffffffffffff16146102a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029890610e3a565b60405180910390fd5b6102ab60006109e9565b565b6102b56109e1565b73ffffffffffffffffffffffffffffffffffffffff166102d36104da565b73ffffffffffffffffffffffffffffffffffffffff1614610329576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032090610e3a565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61036f6104da565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103ca9190610d9b565b60206040518083038186803b1580156103e257600080fd5b505afa1580156103f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041a9190610cb5565b6040518363ffffffff1660e01b8152600401610437929190610db6565b602060405180830381600087803b15801561045157600080fd5b505af1158015610465573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104899190610c5b565b506104926104da565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104d7573d6000803e3d6000fd5b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166105446109e1565b73ffffffffffffffffffffffffffffffffffffffff161461059a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059190610dfa565b60405180910390fd5b8181905084849050146105ac57600080fd5b60005b848490508110156107505760008585838181106105cf576105ce610f8a565b5b90506020020160208101906105e49190610bad565b905060008484848181106105fb576105fa610f8a565b5b905060200201359050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610661929190610db6565b602060405180830381600087803b15801561067b57600080fd5b505af115801561068f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b39190610c5b565b6106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e990610e5a565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f1935050505015801561073a573d6000803e3d6000fd5b505050808061074890610f12565b9150506105af565b5050505050565b61075f6109e1565b73ffffffffffffffffffffffffffffffffffffffff1661077d6104da565b73ffffffffffffffffffffffffffffffffffffffff16146107d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ca90610e3a565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61081f6109e1565b73ffffffffffffffffffffffffffffffffffffffff1661083d6104da565b73ffffffffffffffffffffffffffffffffffffffff1614610893576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088a90610e3a565b60405180910390fd5b8060038190555050565b6108a56109e1565b73ffffffffffffffffffffffffffffffffffffffff166108c36104da565b73ffffffffffffffffffffffffffffffffffffffff1614610919576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091090610e3a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610989576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098090610e1a565b60405180910390fd5b610992816109e9565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610abc8161109c565b92915050565b60008083601f840112610ad857610ad7610fbe565b5b8235905067ffffffffffffffff811115610af557610af4610fb9565b5b602083019150836020820283011115610b1157610b10610fc3565b5b9250929050565b60008083601f840112610b2e57610b2d610fbe565b5b8235905067ffffffffffffffff811115610b4b57610b4a610fb9565b5b602083019150836020820283011115610b6757610b66610fc3565b5b9250929050565b600081519050610b7d816110b3565b92915050565b600081359050610b92816110ca565b92915050565b600081519050610ba7816110ca565b92915050565b600060208284031215610bc357610bc2610fcd565b5b6000610bd184828501610aad565b91505092915050565b60008060008060408587031215610bf457610bf3610fcd565b5b600085013567ffffffffffffffff811115610c1257610c11610fc8565b5b610c1e87828801610ac2565b9450945050602085013567ffffffffffffffff811115610c4157610c40610fc8565b5b610c4d87828801610b18565b925092505092959194509250565b600060208284031215610c7157610c70610fcd565b5b6000610c7f84828501610b6e565b91505092915050565b600060208284031215610c9e57610c9d610fcd565b5b6000610cac84828501610b83565b91505092915050565b600060208284031215610ccb57610cca610fcd565b5b6000610cd984828501610b98565b91505092915050565b610ceb81610ea6565b82525050565b610cfa81610eee565b82525050565b6000610d0d600f83610e95565b9150610d1882610fd2565b602082019050919050565b6000610d30602683610e95565b9150610d3b82610ffb565b604082019050919050565b6000610d53602083610e95565b9150610d5e8261104a565b602082019050919050565b6000610d76600e83610e95565b9150610d8182611073565b602082019050919050565b610d9581610ee4565b82525050565b6000602082019050610db06000830184610ce2565b92915050565b6000604082019050610dcb6000830185610ce2565b610dd86020830184610d8c565b9392505050565b6000602082019050610df46000830184610cf1565b92915050565b60006020820190508181036000830152610e1381610d00565b9050919050565b60006020820190508181036000830152610e3381610d23565b9050919050565b60006020820190508181036000830152610e5381610d46565b9050919050565b60006020820190508181036000830152610e7381610d69565b9050919050565b6000602082019050610e8f6000830184610d8c565b92915050565b600082825260208201905092915050565b6000610eb182610ec4565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610ef982610f00565b9050919050565b6000610f0b82610ec4565b9050919050565b6000610f1d82610ee4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f5057610f4f610f5b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b7f6572726f725f6f6e6c794167656e740000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f6572726f725f7472616e73666572000000000000000000000000000000000000600082015250565b6110a581610ea6565b81146110b057600080fd5b50565b6110bc81610eb8565b81146110c757600080fd5b50565b6110d381610ee4565b81146110de57600080fd5b5056fea2646970667358221220e2315efae9fe33e95a55fac9bdc5caef01ab112fce5bfdd4f82c8a3cff8b0e9164736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Distributor.sol:Distributor",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 212,
        "contract": "contracts/Distributor.sol:Distributor",
        "label": "token",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)181"
      },
      {
        "astId": 214,
        "contract": "contracts/Distributor.sol:Distributor",
        "label": "agent",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 217,
        "contract": "contracts/Distributor.sol:Distributor",
        "label": "stipend",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)181": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}